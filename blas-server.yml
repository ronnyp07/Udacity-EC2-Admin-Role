Description: >
  Ronny Morel | ronny.morel07@gmail.com 2021
  AWS-CloudFormation script to create a Blas access.

############################### Parameters ################################
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdagramApp
  
  KeyBlasSSH:
    Description: An environment ssh key name that will be prefixed to the ssh key names
    Type: String
    Default: emrh

Mappings:
  WebAppRegion:
    us-east-2:
      HVM64: ami-077e31c4939f6a2f3

############################### Resources #################################
Resources:
  BlasIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'

  BlasIamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: fullAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles:
        - !Ref BlasIamRole

  BlasIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
        - !Ref BlasIamRole

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebServerSecGroup
      GroupDescription: Allow http to our hosts and SSH access
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        # 80 to 80 important for healthchecks !
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebServerSecGroup
  
  BlassWeb:
      Type: AWS::EC2::Instance
      DependsOn:
        - WebServerSecGroup
        - BlasIamInstanceProfile
      Properties:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install unzip awscli -y
            apt-get install apache2 -y
            systemctl start apache2.service
            sudo rm /var/www/html/index.html
            sudo aws s3 cp s3://blas-app/blas-web.html /var/www/html
            systemctl restart apache2.service
        IamInstanceProfile: !Ref BlasIamInstanceProfile
        SecurityGroupIds:
          - Ref: WebServerSecGroup
        SubnetId:
          Fn::ImportValue: !Sub '${EnvironmentName}-PUB-SN'
        ImageId: !FindInMap [WebAppRegion, !Ref 'AWS::Region', HVM64]
        InstanceType: t3.small
        KeyName: !Sub ${KeyBlasSSH}